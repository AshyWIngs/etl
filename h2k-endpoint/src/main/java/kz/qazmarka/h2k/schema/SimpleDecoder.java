package kz.qazmarka.h2k.schema;

import org.apache.hadoop.hbase.TableName;

/**
 * SimpleDecoder
 * Лёгкий декодер без зависимостей на Phoenix и без привязки к таблицам.
 * Возвращает сырые байты значения как есть (zero-copy) для максимальной скорости.
 * Предполагается, что вызывающая сторона или более «умный» декодер интерпретирует байты согласно схеме.
 *
 * Свойства:
 * - Потокобезопасен, не содержит состояния.
 * - Дешёвый вызов: одна проверка на null.
 * - Можно переиспользовать общий экземпляр INSTANCE, чтобы не аллоцировать объекты.
 */
public final class SimpleDecoder implements Decoder {

    /** Опциональный общий экземпляр для переиспользования без аллокаций. */
    public static final SimpleDecoder INSTANCE = new SimpleDecoder();

    /** Пустой конструктор: декодер не имеет состояния. */
    public SimpleDecoder() {
        /* Ничего инициализировать не требуется: класс не содержит состояния.
           Конструктор оставлен публичным для совместимости с возможным внешним кодом,
           хотя предпочтительно использовать общий экземпляр INSTANCE без аллокаций. */
    }

    /**
     * Декодирует значение без знания точного типа.
     *
     * @param table     имя таблицы (не используется)
     * @param qualifier имя колонки (не используется)
     * @param value     сырые байты значения; если null — возвращается null
     * @return тот же массив байтов или null
     */
    @Override
    public Object decode(TableName table, String qualifier, byte[] value) {
        if (value == null) return null; // быстрый путь
        // Возвращаем сырые байты без копирования ради максимальной скорости.
        // Внимание: вызывающая сторона не должна модифицировать массив,
        // либо должна скопировать его при длительном хранении.
        return value;
    }
}